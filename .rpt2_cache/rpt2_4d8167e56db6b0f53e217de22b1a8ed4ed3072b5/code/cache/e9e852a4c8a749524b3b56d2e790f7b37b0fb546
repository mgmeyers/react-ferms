{"code":"import * as prop from 'prop-ops';\r\nimport { alwaysValid, noop } from 'helpers';\r\nimport { FormStatus, } from 'types';\r\nvar FormField = /** @class */ (function () {\r\n    function FormField(fieldDef) {\r\n        this.field = fieldDef;\r\n    }\r\n    FormField.prototype.validate = function () {\r\n        var validationStrategy = this.field.validationStrategy;\r\n        var validate = this.field.validate || alwaysValid;\r\n        var results = validationStrategy(this.value, validate);\r\n        var valid = results === true;\r\n        var updatedField = prop.set.mutate(prop.set(this.field, 'status', valid ? FormStatus.DIRTY : FormStatus.INVALID), 'errors', valid ? [] : results);\r\n        return {\r\n            field: new FormField(updatedField),\r\n            valid: valid,\r\n        };\r\n    };\r\n    Object.defineProperty(FormField.prototype, \"isValid\", {\r\n        get: function () {\r\n            return this.status !== FormStatus.INVALID;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormField.prototype, \"errors\", {\r\n        get: function () {\r\n            return this.field.errors || [];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormField.prototype, \"key\", {\r\n        get: function () {\r\n            return this.field.key;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormField.prototype, \"status\", {\r\n        get: function () {\r\n            return this.field.status || FormStatus.PRISTINE;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormField.prototype, \"validateOn\", {\r\n        get: function () {\r\n            return this.field.validateOn || this.field.defaultValidateOn;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormField.prototype, \"validationStrategy\", {\r\n        get: function () {\r\n            return this.field.validationStrategy;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormField.prototype, \"value\", {\r\n        get: function () {\r\n            var transform = this.field.transform || noop;\r\n            return transform(this.field.value || this.emptyValue);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormField.prototype, \"rawValue\", {\r\n        get: function () {\r\n            return this.field.value || this.emptyValue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormField.prototype, \"emptyValue\", {\r\n        get: function () {\r\n            return this.field.multiple ? [] : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FormField.prototype.setKey = function (value) {\r\n        return this.update('key', value);\r\n    };\r\n    FormField.prototype.setValue = function (value) {\r\n        var updatedField = this.update('value', value);\r\n        if (this.status === FormStatus.PRISTINE) {\r\n            updatedField = updatedField.update('status', FormStatus.DIRTY);\r\n        }\r\n        if (this.validateOn === 'change') {\r\n            updatedField = updatedField.validate().field;\r\n        }\r\n        return updatedField;\r\n    };\r\n    FormField.prototype.setTransform = function (value) {\r\n        return this.update('transform', value);\r\n    };\r\n    FormField.prototype.setValidate = function (value) {\r\n        return this.update('validate', value);\r\n    };\r\n    FormField.prototype.setValidateOn = function (value) {\r\n        return this.update('validateOn', value);\r\n    };\r\n    FormField.prototype.setDefaultValidateOn = function (value) {\r\n        return this.update('defaultValidateOn', value);\r\n    };\r\n    FormField.prototype.setValidationStrategy = function (value) {\r\n        return this.update('validationStrategy', value);\r\n    };\r\n    FormField.prototype.update = function (key, value) {\r\n        var updatedField = prop.set(this.field, key, value);\r\n        return new FormField(updatedField);\r\n    };\r\n    return FormField;\r\n}());\r\nexport default FormField;\r\n//# sourceMappingURL=FormField.js.map","map":"{\"version\":3,\"file\":\"FormField.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/data/FormField.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/matt/Documents/Personal/react-ferms/data/FormField.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { FormFieldJSON, FormFieldValidation, FormStatus, TransformFn, ValidateOnOpts, ValidationStrategy } from 'types';\r\nexport default class FormField {\r\n    private field;\r\n    constructor(fieldDef: FormFieldJSON);\r\n    validate(): FormFieldValidation;\r\n    readonly isValid: boolean;\r\n    readonly errors: Array<string | JSX.Element>;\r\n    readonly key: string;\r\n    readonly status: FormStatus;\r\n    readonly validateOn: ValidateOnOpts;\r\n    readonly validationStrategy: any;\r\n    readonly value: string | string[];\r\n    readonly rawValue: string | string[];\r\n    readonly emptyValue: string | string[];\r\n    setKey(value: string): FormField;\r\n    setValue(value: string | string[]): FormField;\r\n    setTransform(value: TransformFn): FormField;\r\n    setValidate(value: any): FormField;\r\n    setValidateOn(value: ValidateOnOpts): FormField;\r\n    setDefaultValidateOn(value: ValidateOnOpts): FormField;\r\n    setValidationStrategy(value: ValidationStrategy): FormField;\r\n    private update;\r\n}\r\n"}}
