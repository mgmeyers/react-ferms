{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { useFieldEffects, useFormContext, useOnBlur } from './hooks';\r\nfunction useOnChange(props, context) {\r\n    var multiple = props.multiple, name = props.name, onChange = props.onChange;\r\n    return React.useMemo(function () { return function (e) {\r\n        if (onChange) {\r\n            onChange(e);\r\n        }\r\n        if (multiple) {\r\n            var values = [].reduce.call(e.target.options, function (vals, v) {\r\n                if (v.selected) {\r\n                    vals.push(v.value);\r\n                }\r\n                return vals;\r\n            }, []);\r\n            context.setValue(name, values);\r\n        }\r\n        else {\r\n            context.setValue(name, e.target.value);\r\n        }\r\n    }; }, [multiple, name, onChange]);\r\n}\r\nfunction getEmptyValue(multiple) {\r\n    if (multiple) {\r\n        return [];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\nexport default function Select(props) {\r\n    var context = useFormContext();\r\n    useFieldEffects(props, context);\r\n    var onBlur = useOnBlur(props, context);\r\n    var onChange = useOnChange(props, context);\r\n    var field = context.fields.getField(props.name);\r\n    var value = field ? field.value : getEmptyValue(props.multiple);\r\n    var children = props.children, transform = props.transform, validate = props.validate, validateOn = props.validateOn, inputProps = tslib_1.__rest(props, [\"children\", \"transform\", \"validate\", \"validateOn\"]);\r\n    return (React.createElement(\"select\", tslib_1.__assign({}, inputProps, { onBlur: onBlur, onChange: onChange, value: value }), children));\r\n}\r\n//# sourceMappingURL=Select.js.map","map":"{\"version\":3,\"file\":\"Select.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/components/Select.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,SAAS,CAAA;AAOpE,SAAS,WAAW,CAAC,KAAY,EAAE,OAAqB;IAC9C,IAAA,yBAAQ,EAAE,iBAAI,EAAE,yBAAQ,CAAU;IAE1C,OAAO,KAAK,CAAC,OAAO,CAClB,cAAM,OAAA,UAAC,CAAiC;QACtC,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,CAAC,CAAC,CAAA;SACZ;QAED,IAAI,QAAQ,EAAE;YACZ,IAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAC3B,CAAC,CAAC,MAAM,CAAC,OAAO,EAChB,UAAC,IAAc,EAAE,CAAoB;gBACnC,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;iBACnB;gBAED,OAAO,IAAI,CAAA;YACb,CAAC,EACD,EAAE,CACH,CAAA;YAED,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;SAC/B;aAAM;YACL,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SACvC;IACH,CAAC,EAtBK,CAsBL,EACD,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAC3B,CAAA;AACH,CAAC;AAED,SAAS,aAAa,CAAC,QAAiB;IACtC,IAAI,QAAQ,EAAE;QACZ,OAAO,EAAE,CAAA;KACV;SAAM;QACL,OAAO,EAAE,CAAA;KACV;AACH,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,KAAY;IACzC,IAAM,OAAO,GAAG,cAAc,EAAE,CAAA;IAEhC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;IAE/B,IAAM,MAAM,GAAG,SAAS,CAAqB,KAAK,EAAE,OAAO,CAAC,CAAA;IAC5D,IAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;IAE5C,IAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACjD,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IAEzD,IAAA,yBAAQ,EAAE,2BAAS,EAAE,yBAAQ,EAAE,6BAAU,EAAE,uFAAa,CAAU;IAE1E,OAAO,CACL,mDAAY,UAAU,IAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,KACrE,QAAQ,CACF,CACV,CAAA;AACH,CAAC\"}","dts":{"name":"/Users/matt/Documents/Personal/react-ferms/components/Select.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { FormFieldProps } from 'types';\r\ndeclare type ElementType = HTMLSelectElement;\r\ndeclare type Props = FormFieldProps & React.HTMLProps<ElementType>;\r\nexport default function Select(props: Props): JSX.Element;\r\nexport {};\r\n"}}
