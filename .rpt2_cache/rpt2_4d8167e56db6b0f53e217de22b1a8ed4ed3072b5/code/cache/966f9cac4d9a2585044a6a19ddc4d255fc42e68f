{"code":"import * as React from 'react';\r\nimport { FormContext } from 'components/Form';\r\nexport function useFieldEffects(props, context) {\r\n    var multiple = props.multiple, key = props.name, type = props.type, transform = props.transform, validate = props.validate, validateOn = props.validateOn;\r\n    React.useEffect(function () {\r\n        context.add({\r\n            key: key,\r\n            multiple: multiple || type === 'checkbox',\r\n            transform: transform,\r\n            validate: validate,\r\n            validateOn: validateOn,\r\n        });\r\n        return function () {\r\n            context.remove(key);\r\n        };\r\n    }, []);\r\n    React.useEffect(function () {\r\n        context.setTransform(key, transform);\r\n    }, [key, transform]);\r\n    React.useEffect(function () {\r\n        context.setValidation(key, validate);\r\n    }, [key, validate]);\r\n    React.useEffect(function () {\r\n        context.setValidateOn(key, validateOn);\r\n    }, [key, validateOn]);\r\n}\r\nexport function useFormContext() {\r\n    return React.useContext(FormContext);\r\n}\r\nexport function useOnBlur(props, context) {\r\n    var name = props.name, onBlur = props.onBlur, validateOn = props.validateOn;\r\n    return React.useMemo(function () { return function (e) {\r\n        if (onBlur) {\r\n            onBlur(e);\r\n        }\r\n        if (validateOn === 'blur') {\r\n            context.validateField(name);\r\n        }\r\n    }; }, [name, onBlur, validateOn]);\r\n}\r\n//# sourceMappingURL=hooks.js.map","map":"{\"version\":3,\"file\":\"hooks.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/components/hooks.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAE9B,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAA;AAG7C,MAAM,UAAU,eAAe,CAC7B,KAAyB,EACzB,OAAqB;IAEb,IAAA,yBAAQ,EAAE,gBAAS,EAAE,iBAAI,EAAE,2BAAS,EAAE,yBAAQ,EAAE,6BAAU,CAAU;IAE5E,KAAK,CAAC,SAAS,CAAC;QACd,OAAO,CAAC,GAAG,CAAC;YACV,GAAG,KAAA;YACH,QAAQ,EAAE,QAAQ,IAAI,IAAI,KAAK,UAAU;YACzC,SAAS,WAAA;YACT,QAAQ,UAAA;YACR,UAAU,YAAA;SACX,CAAC,CAAA;QAEF,OAAO;YACL,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QACrB,CAAC,CAAA;IACH,CAAC,EAAE,EAAE,CAAC,CAAA;IAEN,KAAK,CAAC,SAAS,CAAC;QACd,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,SAAS,CAAC,CAAA;IACtC,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAA;IAEpB,KAAK,CAAC,SAAS,CAAC;QACd,OAAO,CAAC,aAAa,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;IACtC,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAA;IAEnB,KAAK,CAAC,SAAS,CAAC;QACd,OAAO,CAAC,aAAa,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;IACxC,CAAC,EAAE,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAA;AACvB,CAAC;AAED,MAAM,UAAU,cAAc;IAC5B,OAAO,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAA;AACtC,CAAC;AAMD,MAAM,UAAU,SAAS,CACvB,KAA2B,EAC3B,OAAqB;IAEb,IAAA,iBAAI,EAAE,qBAAM,EAAE,6BAAU,CAAU;IAE1C,OAAO,KAAK,CAAC,OAAO,CAClB,cAAM,OAAA,UAAC,CAAsB;QAC3B,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,CAAC,CAAC,CAAA;SACV;QAED,IAAI,UAAU,KAAK,MAAM,EAAE;YACzB,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;SAC5B;IACH,CAAC,EARK,CAQL,EACD,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAC3B,CAAA;AACH,CAAC\"}","dts":{"name":"/Users/matt/Documents/Personal/react-ferms/components/hooks.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { FormFieldProps, IFormContext } from 'types';\r\nexport declare function useFieldEffects<T>(props: FormFieldProps & T, context: IFormContext): void;\r\nexport declare function useFormContext(): IFormContext;\r\ndeclare type BlurrableProp<T> = FormFieldProps & {\r\n    onBlur?: (e: React.FocusEvent<T>) => void;\r\n};\r\nexport declare function useOnBlur<T, P>(props: BlurrableProp<T> & P, context: IFormContext): (e: React.FocusEvent<T>) => void;\r\nexport {};\r\n"}}
