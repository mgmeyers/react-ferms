{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport FormFields from 'data/FormFields';\r\nimport { noop } from 'helpers';\r\nexport var FormContext = React.createContext({\r\n    add: noop,\r\n    fields: new FormFields({}),\r\n    remove: noop,\r\n    setTransform: noop,\r\n    setValidateOn: noop,\r\n    setValidation: noop,\r\n    setValue: noop,\r\n    validateField: noop,\r\n});\r\nfunction useFormEffects(props, dispatch) {\r\n    var defaults = props.defaults, validateOn = props.validateOn, validationStrategy = props.validationStrategy;\r\n    React.useEffect(function () {\r\n        dispatch({\r\n            defaults: defaults,\r\n            type: 'setDefaults',\r\n        });\r\n    }, [defaults]);\r\n    React.useEffect(function () {\r\n        dispatch({\r\n            defaultValidateOn: validateOn,\r\n            type: 'setDefaultValidateOn',\r\n        });\r\n    }, [validateOn]);\r\n    React.useEffect(function () {\r\n        dispatch({\r\n            type: 'setValidationStrategy',\r\n            validationStrategy: validationStrategy,\r\n        });\r\n    }, [validationStrategy]);\r\n}\r\nfunction useOnSubmit(props, fields, dispatch) {\r\n    var onError = props.onError, onSubmit = props.onSubmit, preValidate = props.preValidate;\r\n    return React.useMemo(function () { return function (e) {\r\n        e.preventDefault();\r\n        if (preValidate) {\r\n            preValidate();\r\n        }\r\n        var results = fields.validate();\r\n        dispatch({ type: 'set', fields: results.fields });\r\n        if (results.valid) {\r\n            onSubmit(fields.values);\r\n        }\r\n        else if (onError) {\r\n            onError(results.fields.errors);\r\n        }\r\n    }; }, [fields, onError, onSubmit, preValidate]);\r\n}\r\nfunction reducer(fields, action) {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return fields.add(action.field);\r\n        case 'remove':\r\n            return fields.remove(action.key);\r\n        case 'setTransform':\r\n            return fields.setTransform(action.key, action.transform);\r\n        case 'setValidateOn':\r\n            return fields.setValidateOn(action.key, action.validateOn);\r\n        case 'setValidation':\r\n            return fields.setValidation(action.key, action.validate);\r\n        case 'setValue':\r\n            return fields.setValue(action.key, action.value);\r\n        case 'validateField':\r\n            return fields.validateField(action.key).fields;\r\n        case 'setDefaults':\r\n            return fields.setDefaults(action.defaults);\r\n        case 'setDefaultValidateOn':\r\n            return fields.setDefaultValidateOn(action.defaultValidateOn);\r\n        case 'setValidationStrategy':\r\n            return fields.setValidationStrategy(action.validationStrategy);\r\n        case 'set':\r\n            return action.fields;\r\n    }\r\n}\r\nfunction useContextValue(fields, dispatch) {\r\n    return React.useMemo(function () { return ({\r\n        add: function (field) {\r\n            dispatch({ type: 'add', field: field });\r\n        },\r\n        fields: fields,\r\n        remove: function (key) {\r\n            dispatch({ type: 'remove', key: key });\r\n        },\r\n        setTransform: function (key, transform) {\r\n            dispatch({ type: 'setTransform', key: key, transform: transform });\r\n        },\r\n        setValidateOn: function (key, validateOn) {\r\n            dispatch({ type: 'setValidateOn', key: key, validateOn: validateOn });\r\n        },\r\n        setValidation: function (key, validate) {\r\n            dispatch({ type: 'setValidation', key: key, validate: validate });\r\n        },\r\n        setValue: function (key, value) {\r\n            dispatch({ type: 'setValue', key: key, value: value });\r\n        },\r\n        validateField: function (key) {\r\n            dispatch({ type: 'validateField', key: key });\r\n        },\r\n    }); }, [fields]);\r\n}\r\nexport function useFormState(props) {\r\n    var defaults = props.defaults, validateOn = props.validateOn, validationStrategy = props.validationStrategy;\r\n    var _a = React.useReducer(reducer, new FormFields({\r\n        defaults: defaults,\r\n        validateOn: validateOn,\r\n        validationStrategy: validationStrategy,\r\n    })), fields = _a[0], dispatch = _a[1];\r\n    useFormEffects(props, dispatch);\r\n    return {\r\n        context: useContextValue(fields, dispatch),\r\n        onSubmit: useOnSubmit(props, fields, dispatch),\r\n    };\r\n}\r\nexport default function Form(props) {\r\n    var children = props.children, defaults = props.defaults, onError = props.onError, os = props.onSubmit, preValidate = props.preValidate, validateOn = props.validateOn, validationStrategy = props.validationStrategy, formProps = tslib_1.__rest(props, [\"children\", \"defaults\", \"onError\", \"onSubmit\", \"preValidate\", \"validateOn\", \"validationStrategy\"]);\r\n    var _a = useFormState(props), context = _a.context, onSubmit = _a.onSubmit;\r\n    return (React.createElement(FormContext.Provider, { value: context },\r\n        React.createElement(\"form\", tslib_1.__assign({}, formProps, { onSubmit: onSubmit }), props.children)));\r\n}\r\n//# sourceMappingURL=Form.js.map","map":"{\"version\":3,\"file\":\"Form.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/components/Form.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/matt/Documents/Personal/react-ferms/components/Form.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport FormFields from 'data/FormFields';\r\nimport { AddFieldOpts, FormProps, IFormContext, TransformFn, ValidateOnOpts } from 'types';\r\nexport declare const FormContext: React.Context<IFormContext>;\r\nexport declare function useFormState(props: FormProps): {\r\n    context: {\r\n        add: (field: AddFieldOpts) => void;\r\n        fields: FormFields;\r\n        remove: (key: string) => void;\r\n        setTransform: (key: string, transform: TransformFn) => void;\r\n        setValidateOn: (key: string, validateOn: ValidateOnOpts) => void;\r\n        setValidation: (key: string, validate: any) => void;\r\n        setValue: (key: string, value: string) => void;\r\n        validateField: (key: string) => void;\r\n    };\r\n    onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n};\r\nexport default function Form(props: FormProps & React.HTMLProps<HTMLFormElement>): JSX.Element;\r\n"}}
