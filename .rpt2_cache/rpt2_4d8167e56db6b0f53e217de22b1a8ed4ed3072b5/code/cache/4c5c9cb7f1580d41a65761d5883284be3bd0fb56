{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { useFieldEffects, useFormContext, useOnBlur } from './hooks';\r\nfunction isCheckbox(props) {\r\n    return props.type === 'checkbox';\r\n}\r\nfunction isChecked(val, field) {\r\n    var value = field ? field.value : [];\r\n    return value.includes(val);\r\n}\r\nfunction useOnChange(props, context) {\r\n    var name = props.name, onChange = props.onChange, value = props.value;\r\n    var field = context.fields.getField(name);\r\n    return React.useMemo(function () { return function (e) {\r\n        if (onChange) {\r\n            onChange(e);\r\n        }\r\n        if (isCheckbox(props)) {\r\n            var checked = e.target.checked;\r\n            var currentValue = field.rawValue;\r\n            var nextValue = currentValue.slice();\r\n            if (checked) {\r\n                nextValue.push(value);\r\n            }\r\n            else {\r\n                nextValue.splice(currentValue.indexOf(value), 1);\r\n            }\r\n            context.setValue(name, nextValue);\r\n        }\r\n        else {\r\n            context.setValue(name, e.target.value);\r\n        }\r\n    }; }, [field, name, onChange, value]);\r\n}\r\nexport default function Input(props) {\r\n    var context = useFormContext();\r\n    useFieldEffects(props, context);\r\n    var onBlur = useOnBlur(props, context);\r\n    var onChange = useOnChange(props, context);\r\n    var field = context.fields.getField(props.name);\r\n    var value = field ? field.value : '';\r\n    var transform = props.transform, validate = props.validate, validateOn = props.validateOn, otherProps = tslib_1.__rest(props, [\"transform\", \"validate\", \"validateOn\"]);\r\n    var inputProps = tslib_1.__assign({}, otherProps, { onBlur: onBlur,\r\n        onChange: onChange });\r\n    if (isCheckbox(props)) {\r\n        inputProps.checked = isChecked(props.value, field);\r\n    }\r\n    else {\r\n        inputProps.value = value;\r\n    }\r\n    return React.createElement(\"input\", tslib_1.__assign({}, inputProps));\r\n}\r\n//# sourceMappingURL=Input.js.map","map":"{\"version\":3,\"file\":\"Input.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/components/Input.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAI9B,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,SAAS,CAAA;AAOpE,SAAS,UAAU,CAAC,KAAY;IAC9B,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,CAAA;AAClC,CAAC;AAED,SAAS,SAAS,CAAC,GAAW,EAAE,KAAgB;IAC9C,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA;IACtC,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;AAC5B,CAAC;AAED,SAAS,WAAW,CAAC,KAAY,EAAE,OAAqB;IAC9C,IAAA,iBAAI,EAAE,yBAAQ,EAAE,mBAAK,CAAU;IACvC,IAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAE3C,OAAO,KAAK,CAAC,OAAO,CAClB,cAAM,OAAA,UAAC,CAAiC;QACtC,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,CAAC,CAAC,CAAA;SACZ;QAED,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;YACrB,IAAM,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAA;YAChC,IAAM,YAAY,GAAG,KAAK,CAAC,QAAoB,CAAA;YAC/C,IAAM,SAAS,GAAO,YAAY,QAAC,CAAA;YAEnC,IAAI,OAAO,EAAE;gBACX,SAAS,CAAC,IAAI,CAAC,KAAe,CAAC,CAAA;aAChC;iBAAM;gBACL,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAe,CAAC,EAAE,CAAC,CAAC,CAAA;aAC3D;YAED,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;SAClC;aAAM;YACL,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SACvC;IACH,CAAC,EApBK,CAoBL,EACD,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAC/B,CAAA;AACH,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,KAAK,CAAC,KAAY;IACxC,IAAM,OAAO,GAAG,cAAc,EAAE,CAAA;IAEhC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;IAE/B,IAAM,MAAM,GAAG,SAAS,CAAqB,KAAK,EAAE,OAAO,CAAC,CAAA;IAC5D,IAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;IAE5C,IAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACjD,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA;IAE9B,IAAA,2BAAS,EAAE,yBAAQ,EAAE,6BAAU,EAAE,2EAAa,CAAU;IAEhE,IAAM,UAAU,wBACX,UAAU,IACb,MAAM,QAAA;QACN,QAAQ,UAAA,GACT,CAAA;IAED,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;QACrB,UAAU,CAAC,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,KAAe,EAAE,KAAK,CAAC,CAAA;KAC7D;SAAM;QACL,UAAU,CAAC,KAAK,GAAG,KAAK,CAAA;KACzB;IAED,OAAO,kDAAW,UAAU,EAAI,CAAA;AAClC,CAAC\"}","dts":{"name":"/Users/matt/Documents/Personal/react-ferms/components/Input.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nimport { FormFieldProps } from 'types';\r\ndeclare type ElementType = HTMLInputElement;\r\ndeclare type Props = FormFieldProps & React.HTMLProps<ElementType>;\r\nexport default function Input(props: Props): JSX.Element;\r\nexport {};\r\n"}}
